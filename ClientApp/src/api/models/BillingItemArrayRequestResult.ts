/* tslint:disable */
/* eslint-disable */
/**
 * MyPersonalAccounting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BillingItem } from './BillingItem';
import {
    BillingItemFromJSON,
    BillingItemFromJSONTyped,
    BillingItemToJSON,
} from './BillingItem';

/**
 * 
 * @export
 * @interface BillingItemArrayRequestResult
 */
export interface BillingItemArrayRequestResult {
    /**
     * 
     * @type {Array<BillingItem>}
     * @memberof BillingItemArrayRequestResult
     */
    result: Array<BillingItem>;
    /**
     * 
     * @type {number}
     * @memberof BillingItemArrayRequestResult
     */
    version: number;
}

/**
 * Check if a given object implements the BillingItemArrayRequestResult interface.
 */
export function instanceOfBillingItemArrayRequestResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function BillingItemArrayRequestResultFromJSON(json: any): BillingItemArrayRequestResult {
    return BillingItemArrayRequestResultFromJSONTyped(json, false);
}

export function BillingItemArrayRequestResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingItemArrayRequestResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': ((json['result'] as Array<any>).map(BillingItemFromJSON)),
        'version': json['version'],
    };
}

export function BillingItemArrayRequestResultToJSON(value?: BillingItemArrayRequestResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': ((value.result as Array<any>).map(BillingItemToJSON)),
        'version': value.version,
    };
}

