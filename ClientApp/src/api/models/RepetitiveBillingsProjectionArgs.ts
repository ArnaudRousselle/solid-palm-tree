/* tslint:disable */
/* eslint-disable */
/**
 * MyPersonalAccounting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RepetitiveBillingsProjectionArgs
 */
export interface RepetitiveBillingsProjectionArgs {
    /**
     * 
     * @type {string}
     * @memberof RepetitiveBillingsProjectionArgs
     */
    readonly argsType: string;
    /**
     * 
     * @type {number}
     * @memberof RepetitiveBillingsProjectionArgs
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof RepetitiveBillingsProjectionArgs
     */
    portfolioId: string;
}

/**
 * Check if a given object implements the RepetitiveBillingsProjectionArgs interface.
 */
export function instanceOfRepetitiveBillingsProjectionArgs(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "argsType" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "portfolioId" in value;

    return isInstance;
}

export function RepetitiveBillingsProjectionArgsFromJSON(json: any): RepetitiveBillingsProjectionArgs {
    return RepetitiveBillingsProjectionArgsFromJSONTyped(json, false);
}

export function RepetitiveBillingsProjectionArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepetitiveBillingsProjectionArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'argsType': json['argsType'],
        'version': json['version'],
        'portfolioId': json['portfolioId'],
    };
}

export function RepetitiveBillingsProjectionArgsToJSON(value?: RepetitiveBillingsProjectionArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'portfolioId': value.portfolioId,
    };
}

